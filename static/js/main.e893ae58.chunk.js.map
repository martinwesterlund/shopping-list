{"version":3,"sources":["contexts/ItemContext.js","components/ItemForm.js","components/ItemList.js","components/BoughtItems.js","components/Backgrounds.js","App.js","serviceWorker.js","index.js"],"names":["ItemContext","createContext","ItemContextProvider","props","useState","JSON","parse","localStorage","getItem","items","setItems","boughtItems","setBoughtItems","useEffect","setItem","stringify","Provider","value","addItem","itemName","id","uuidv4","moveItem","filter","item","length","boughtItem","removeItem","children","ItemForm","useContext","setItemName","form","className","autoComplete","onSubmit","e","preventDefault","input","initial","x","opacity","animate","transition","delay","type","placeholder","onChange","target","required","button","ItemList","div","height","map","onDoubleClick","key","icon","faTrashAlt","onClick","BoughtItems","Backgrounds","App","enableMouseEvents","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e893ae58.chunk.js","sourcesContent":["import React, { createContext, useState, useEffect } from \"react\";\nimport { v4 as uuidv4 } from \"uuid\";\n\nexport const ItemContext = createContext();\n\nconst ItemContextProvider = (props) => {\n  const [items, setItems] = useState(JSON.parse(localStorage.getItem(\"items\")));\n  const [boughtItems, setBoughtItems] = useState(\n    JSON.parse(localStorage.getItem(\"boughtItems\"))\n  );\n\n\n  \n  const addItem = (itemName) => {\n    items\n      ? setItems([...items, { id: uuidv4(), itemName }])\n      : setItems([{ id: uuidv4(), itemName }]);\n  };\n  const moveItem = (id) => {\n    if (items.filter((item) => item.id === id).length > 0) {\n      let boughtItem = items.filter((item) => item.id === id)[0];\n      boughtItems ? setBoughtItems([...boughtItems, { id, itemName: boughtItem.itemName }]) : setBoughtItems([{ id, itemName: boughtItem.itemName }]);\n      setItems(items.filter((item) => item.id !== id));\n    } else {\n      let item = boughtItems.filter((item) => item.id === id)[0];\n      setItems([...items, { id, itemName: item.itemName }]);\n      setBoughtItems(boughtItems.filter((item) => item.id !== id));\n    }\n  };\n  const removeItem = (id) => {\n    if (items.filter((item) => item.id === id).length > 0) {\n      setItems(items.filter((item) => item.id !== id));\n    } else {\n      setBoughtItems(boughtItems.filter((item) => item.id !== id));\n    }\n  };\n\n  useEffect(() => {\n    localStorage.setItem(\"items\", JSON.stringify(items));\n    localStorage.setItem(\"boughtItems\", JSON.stringify(boughtItems));\n  });\n  \n  return (\n    <ItemContext.Provider\n      value={{\n        items,\n        boughtItems,\n        addItem,\n        moveItem,\n        removeItem,\n      }}\n    >\n      {props.children}\n    </ItemContext.Provider>\n  );\n};\n\nexport default ItemContextProvider;\n","import React, { useContext, useState } from \"react\";\nimport { ItemContext } from \"../contexts/ItemContext\";\nimport { motion } from \"framer-motion\";\n\nconst ItemForm = () => {\n  const { addItem } = useContext(ItemContext);\n  const [itemName, setItemName] = useState(\"\");\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    addItem(itemName);\n    setItemName(\"\");\n  };\n  \n  return (\n    <motion.form className=\"form\" autoComplete=\"off\" onSubmit={handleSubmit}>\n      <motion.input\n        initial={{ x: -500, opacity: 0 }}\n        animate={{ x: 0, opacity: 1 }}\n        transition={{ delay: 1 }}\n        id=\"add-field\"\n        type=\"text\"\n        placeholder=\"Produkt...\"\n        value={itemName}\n        onChange={(e) => setItemName(e.target.value)}\n        required\n      />\n\n      <motion.button\n        initial={{ x: 500, opacity: 0 }}\n        animate={{ x: 0, opacity: 1}}\n        transition={{ delay: 1 }}\n        id=\"submit-btn\"\n        type=\"submit\"\n      >\n        Lägg till\n      </motion.button>\n    </motion.form>\n  );\n};\n\nexport default ItemForm;\n","import React, { useContext } from \"react\";\nimport { ItemContext } from \"../contexts/ItemContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faTrashAlt } from \"@fortawesome/free-solid-svg-icons\";\nimport ItemForm from \"./ItemForm\";\nimport { motion } from \"framer-motion\";\n\nconst ItemList = () => {\n  const { items, removeItem, moveItem } = useContext(ItemContext);\n\n  return items ? (\n    <div className=\"item-view\">\n      <div className=\"navbar\">\n        <motion.div\n          initial={{ x: 500, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          transition={{ delay: 1 }}\n        >\n          {\" \"}\n          att köpa. ({items.length})\n        </motion.div>\n      </div>\n      <motion.div\n        initial={{ opacity: 0, height: 0 }}\n        animate={{ opacity: 0.95, height: \"65vh\" }}\n        transition={{ delay: 1.2 }}\n        className=\"item-list\"\n      >\n        <div className=\"item-container\">\n          {items.map((item) => {\n            return (\n              <div\n                onDoubleClick={() => moveItem(item.id)}\n                className=\"item\"\n                key={item.id}\n              >\n                {item.itemName}\n                <FontAwesomeIcon\n                  className=\"trash\"\n                  icon={faTrashAlt}\n                  onClick={() => removeItem(item.id)}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </motion.div>\n      <ItemForm></ItemForm>\n    </div>\n  ) : (\n    <div className=\"item-view\">\n      <div className=\"navbar\">\n        <motion.div\n          initial={{ x: 500, opacity: 0 }}\n          animate={{ x: 0, opacity: 1 }}\n          transition={{ delay: 1 }}\n        >\n          {\" \"}\n          att köpa. (0)\n        </motion.div>\n      </div>\n      <motion.div\n        initial={{ opacity: 0, height: 0 }}\n        animate={{ opacity: 0.95, height: \"65vh\" }}\n        transition={{ delay: 1.2 }}\n        className=\"item-list\"\n      >\n        <div className=\"item-container\"></div>\n      </motion.div>\n      <ItemForm></ItemForm>\n    </div>\n  );\n};\n\nexport default ItemList;\n","import React, { useContext } from \"react\";\nimport { ItemContext } from \"../contexts/ItemContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\n\nimport { faTrashAlt} from \"@fortawesome/free-solid-svg-icons\";\n\nconst BoughtItems = () => {\n  const { boughtItems, moveItem, removeItem } = useContext(ItemContext);\n  return boughtItems ? (\n    <div className=\"item-view\">\n      <div className=\"navbar\">köpt. ({boughtItems.length})</div>\n      <div className=\"item-list\">\n        <div className=\"item-container\">\n          {/* <FontAwesomeIcon class=\"bg-icon\" icon={faShoppingCart} /> */}\n          {boughtItems.map((item) => {\n            return (\n              <div\n                onDoubleClick={() => moveItem(item.id)}\n                className=\"item\"\n                key={item.id}\n              >\n                {item.itemName}\n                <FontAwesomeIcon\n                  className=\"trash\"\n                  icon={faTrashAlt}\n                  onClick={() => removeItem(item.id)}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className=\"form\"></div>\n    </div>\n  ) : (\n    <div className=\"item-view\">\n      <div\n        \n        className=\"navbar\"\n      >\n        köpt. (0)\n      </div>\n      <div\n        \n        className=\"item-list\"\n      >\n        \n      </div>\n      <div className=\"form\"></div>\n    </div>\n  );\n};\n\nexport default BoughtItems;\n","import React from 'react'\n\nexport function Backgrounds() {\n  return (\n    <div className=\"crossfade\">\n      <figure></figure>\n      <figure></figure>\n      <figure></figure>\n      <figure></figure>\n      <figure></figure>\n    </div>\n  );\n}\n","import React from \"react\";\nimport SwipeableViews from \"react-swipeable-views\";\nimport ItemContextProvider from \"./contexts/ItemContext\";\nimport ItemList from \"./components/ItemList\";\nimport BoughtItems from \"./components/BoughtItems\";\nimport { Backgrounds } from \"./components/Backgrounds\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <Backgrounds></Backgrounds>\n      <ItemContextProvider>\n        <SwipeableViews enableMouseEvents>\n          <ItemList></ItemList>\n          <BoughtItems></BoughtItems>\n        </SwipeableViews>\n      </ItemContextProvider>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}